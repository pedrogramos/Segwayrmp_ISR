// Generated by gencpp from file testeturtle/talk.msg
// DO NOT EDIT!


#ifndef TESTETURTLE_MESSAGE_TALK_H
#define TESTETURTLE_MESSAGE_TALK_H

#include <ros/service_traits.h>


#include <testeturtle/talkRequest.h>
#include <testeturtle/talkResponse.h>


namespace testeturtle
{

struct talk
{

typedef talkRequest Request;
typedef talkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct talk
} // namespace testeturtle


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::testeturtle::talk > {
  static const char* value()
  {
    return "58ba147ce3095b36344060f1e5dd0b05";
  }

  static const char* value(const ::testeturtle::talk&) { return value(); }
};

template<>
struct DataType< ::testeturtle::talk > {
  static const char* value()
  {
    return "testeturtle/talk";
  }

  static const char* value(const ::testeturtle::talk&) { return value(); }
};


// service_traits::MD5Sum< ::testeturtle::talkRequest> should match 
// service_traits::MD5Sum< ::testeturtle::talk > 
template<>
struct MD5Sum< ::testeturtle::talkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::testeturtle::talk >::value();
  }
  static const char* value(const ::testeturtle::talkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::testeturtle::talkRequest> should match 
// service_traits::DataType< ::testeturtle::talk > 
template<>
struct DataType< ::testeturtle::talkRequest>
{
  static const char* value()
  {
    return DataType< ::testeturtle::talk >::value();
  }
  static const char* value(const ::testeturtle::talkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::testeturtle::talkResponse> should match 
// service_traits::MD5Sum< ::testeturtle::talk > 
template<>
struct MD5Sum< ::testeturtle::talkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::testeturtle::talk >::value();
  }
  static const char* value(const ::testeturtle::talkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::testeturtle::talkResponse> should match 
// service_traits::DataType< ::testeturtle::talk > 
template<>
struct DataType< ::testeturtle::talkResponse>
{
  static const char* value()
  {
    return DataType< ::testeturtle::talk >::value();
  }
  static const char* value(const ::testeturtle::talkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TESTETURTLE_MESSAGE_TALK_H
